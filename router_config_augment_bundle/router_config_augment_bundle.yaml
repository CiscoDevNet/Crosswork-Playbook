---
# Ansible playbook to cost out a bundle under IGP, add interface to bundle and cost in

#@header_start
# "mop_version": "1.0.0"
# "name": "Augment Bundle Capacity"
# "description": "Augment capacity of a bundle by IGP cost out of both ends of bundle, add interface at each end followed by IGP cost in of the bundle"
# "pb_params_sample_file_name": "router_config_augment_bundle_params.json"
# "pb_params_spec_file_name": "router_config_augment_bundle_specs.json"
# "prerequisites": "<ol><li>The bundle pair exists on the chosen router pair. </li><li>The interface(s) being added to bundles should not have any IP configuration. </li><li> One of the IGPs (ISIS/OSPF/OSPFv3) should be enabled for the bundle ethernet interface </li></ol>"
# "long_description": "This playbook drains the traffic (‘cost-out’) at both the ends of a bundle ether. It adds one or more interfaces on both sides, verifies the capacity of the bundle and then stop draining the traffic (‘cost-in’) on the bundle."
# "sw_platform": "IOS XR"
# "min_nodes": 2
# "max_nodes": 2
#@header_end

#########################################################
# Continuous checks
#########################################################

- name: Perform continuous checks on the router(s)
  hosts: localhost
  connection: local
  gather_facts: no
  tags: ["continuous"]
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ hosts }}"
    - check_mode: no
    - unique_id: "as a continuous check"
    - check: "cost_op_cont"

  roles:
    - { role: router_check }

#########################################################
# Maintenance
#########################################################

- name: Perform Lock on the devices
  hosts: localhost
  any_errors_fatal: true
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ hosts }}"
    - check_mode: "{{ check_mode }}"

  roles:
    - { role: router_op_dlm_node_lock, tags: ["maintenance"] }

- name: Get RFC-3339 system timestamp
  hosts: "{{ hosts }}"
  connection: local
  gather_facts: no
  tags:
    - "maintenance"
  tasks:
    - name: Get time of starting collection
      shell: date +%FT%T.%5NZ
      register: collection_start_time

- name: Pause
  hosts: "{{ hosts }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ hosts }}"
    - collection_type: "{{ collection_type }}"    
    - pause_time: "{{ 120 if collection_type == 'snmp' else 60 }}"
    - pause_reason: "continuous checks to collect data points"
    - check_mode: "{{ check_mode }}"

  roles:
    - {role: op_pause, tags: ["maintenance"]}

- name: Cost 'out' operation on router1 for specified interface
  hosts:  "{{ rtr1_host }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - unique_id: "rtr1"
    - if_names: "Bundle-Ether{{ rtr1_bundle_id }}"
    - cost_op: out
    - cost_protocol: "{{ cost_protocol }}"
    - check_mode: "{{ check_mode }}"

  roles:
    - {role: router_op_cost_in_out_interface, tags: ["maintenance"]}

- name: Cost 'out' operation on router2 for specified interface
  hosts:  "{{ rtr2_host }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - unique_id: "rtr2"
    - if_names: "Bundle-Ether{{ rtr2_bundle_id }}"
    - cost_op: out
    - cost_protocol: "{{ cost_protocol }}"
    - check_mode: "{{ check_mode }}"

  roles:
    - {role: router_op_cost_in_out_interface, tags: ["maintenance"]}

- name: Get RFC-3339 system timestamp
  hosts: "{{ hosts }}"
  connection: local
  gather_facts: no
  tags:
    - "maintenance"
  tasks:
    - name: Get time of cost out
      shell: date +%FT%T.%5NZ
      register: cost_out_time

- name: Pause
  hosts: "{{ hosts }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ hosts }}"
    - pause_time: 120
    - pause_reason: "traffic to drain out"
    - check_mode: "{{ check_mode }}"

  roles:
    - {role: op_pause, tags: ["maintenance"]}

- name: Get RFC-3339 system timestamp
  hosts: "{{ hosts }}"
  connection: local
  gather_facts: no
  tags:
    - "maintenance"
  tasks:
    - name: Get time before verifying cost out
      shell: date +%FT%T.%5NZ
      register: cost_out_check_start_time

- name: Verify cost-out operation on the specified router(s)
  hosts:  "{{ rtr1_host }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ rtr1_host }}"
    - check_mode: "{{ check_mode }}"
    - threshold_percentage: "{{ cost_threshold_percent }}"
    - interfaces: ["Bundle-Ether{{ rtr1_bundle_id }}"]
    - query_period: "{{ (( cost_out_time.stdout|to_datetime('%Y-%m-%dT%H:%M:%S.%fZ') - collection_start_time.stdout|to_datetime('%Y-%m-%dT%H:%M:%S.%fZ') ).total_seconds()/ 60 ) | round(0,'ceil') | int | string | regex_replace('^(.+)$','\\1m') if cost_out_check_start_time is defined and collection_start_time is defined else '' }}"
    - offset_time: "{{ (( cost_out_check_start_time.stdout|to_datetime('%Y-%m-%dT%H:%M:%S.%fZ') - collection_start_time.stdout|to_datetime('%Y-%m-%dT%H:%M:%S.%fZ') ).total_seconds()/ 60 ) | round(0,'ceil') | int | string | regex_replace('^(.+)$','\\1m') if cost_out_check_start_time is defined and cost_out_time is defined else '' }}"
    - source: "astack"

  roles:
    - {role: router_check_cost_out, tags: ["maintenance"]}

- name: Add interfaces to the Bundle-Ether on router1
  hosts: "{{ rtr1_host }}"
  connection: local
  gather_facts: no
  any_errors_fatal: true

  vars:
    - router_ip: "{{ inventory_hostname }}"
    - interfaces: "{{ rtr1_interfaces }}"
    - bundle_id: "{{ rtr1_bundle_id }}"
    - operation: "add"
    - unique_id: "on rtr1"

  roles:
    - { role: router_config_modify_interface_bundle_ether,  tags: ["maintenance"] }

- name: Verify Bundle-Ether capacity on router1
  hosts: "{{ rtr1_host }}"
  connection: local
  gather_facts: no
  any_errors_fatal: true

  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ rtr1_host }}"
    - if_name: "Bundle-Ether{{ rtr1_bundle_id }}"
    - unique_id: "on rtr1"
    - check: "interface_bw"
  roles:
    - { role: router_check,  tags: ["maintenance"] }


- name: Add interfaces to the Bundle-Ether on router2
  hosts: "{{ rtr2_host }}"
  connection: local
  gather_facts: no
  any_errors_fatal: true

  vars:
    - router_ip: "{{ inventory_hostname }}"
    - bundle_id: "{{ rtr2_bundle_id }}"
    - interfaces: "{{ rtr2_interfaces }}"
    - operation: "add"
    - unique_id: "on rtr2"

  roles:
    - { role: router_config_modify_interface_bundle_ether,  tags: ["maintenance"] }

- name: Verify Bundle-Ether capacity on router2
  hosts: "{{ rtr2_host }}"
  connection: local
  gather_facts: no
  any_errors_fatal: true

  vars:
    - router_ip: "{{ inventory_hostname }}"
    - router_name: "{{ rtr2_host }}"
    - unique_id: "on rtr2"
    - if_name: "Bundle-Ether{{ rtr2_bundle_id }}"
    - check: "interface_bw"
  roles:
    - { role: router_check,  tags: ["maintenance"] }

- name: Cost 'in' operation on router1 for the specified interface
  hosts:  "{{ rtr1_host }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - unique_id: "rtr1"
    - if_names: "Bundle-Ether{{ rtr1_bundle_id }}"
    - cost_op: in
    - cost_protocol: "{{ cost_protocol }}"
    - check_mode: "{{ check_mode }}"
    - cost_out_result: "{{ cost_op_result if cost_op_result is defined else {} }}"

  roles:
    - {role: router_op_cost_in_out_interface, tags: ["maintenance"]}


- name: Cost 'in' operation on router2 for the specified interface
  hosts:  "{{ rtr2_host }}"
  connection: local
  gather_facts: no
  vars:
    - router_ip: "{{ inventory_hostname }}"
    - unique_id: "rtr2"
    - if_names: "Bundle-Ether{{ rtr2_bundle_id }}"
    - cost_op: in
    - cost_protocol: "{{ cost_protocol }}"
    - check_mode: "{{ check_mode }}"
    - cost_out_result: "{{ cost_op_result if cost_op_result is defined else {} }}"

  roles:
    - {role: router_op_cost_in_out_interface, tags: ["maintenance"]}


...
